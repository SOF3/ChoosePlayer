name: CI
on:
  - push
  - pull_request
jobs:
  build-php:
    name: Prepare PHP
    runs-on: ubuntu-20.04
    strategy:
      matrix:
        php: [8.2.3]
    steps:
      - name: Build and prepare PHP cache
        uses: pmmp/setup-php-action@main
        with:
          php-version: ${{ matrix.php }}
          install-path: "../bin"

  fmt:
    name: code style check
    needs: [build-php]
    runs-on: ubuntu-20.04
    strategy:
      matrix:
        php:
          - "8.2.3"
    steps:
      - uses: actions/checkout@v3
      - uses: pmmp/setup-php-action@main
        with:
          php-version: ${{matrix.php}}
          install-path: "../bin"
      - name: Install Composer
        run: curl -sS https://getcomposer.org/installer | php
      - run: composer install
      - run: composer fmt
  phpstan:
    name: phpstan analyze
    needs: [build-php]
    runs-on: ubuntu-20.04
    strategy:
      matrix:
        php:
          - "8.2.3"
    steps:
      - uses: actions/checkout@v3
      - uses: pmmp/setup-php-action@main
        with:
          php-version: ${{matrix.php}}
          install-path: "../bin"
      - name: Install Composer
        run: curl -sS https://getcomposer.org/installer | php
      - run: composer install
      - name: phpstan analyze
        run: composer lint
  phpunit:
    name: unit tests
    needs: [build-php]
    runs-on: ubuntu-20.04
    strategy:
      matrix:
        php:
          - "8.2.3"
    steps:
      - uses: actions/checkout@v3
      - uses: pmmp/setup-php-action@main
        with:
          php-version: ${{matrix.php}}
          install-path: "../bin"
      - name: Install Composer
        run: curl -sS https://getcomposer.org/installer | php
      - run: composer install
      - name: run tests
        run: composer test
  pharynx:
    name: build phar
    permissions:
      contents: write
    concurrency:
      group: pharynx/${{github.ref}}
    needs: [build-php]
    runs-on: ubuntu-20.04
    if: github.event_name == 'push' && (github.ref == 'refs/heads/master' || github.ref == 'refs/heads/pharynx-action')
    strategy:
      matrix:
        php:
          - "8.2.3"
    steps:
      - uses: actions/checkout@v3
      - uses: pmmp/setup-php-action@main
        with:
          php-version: ${{matrix.php}}
          install-path: "../bin"
      - uses: SOF3/pharynx@v0.1
        id: pharynx

      - name: Setup staging branch
        run: |
          git fetch origin
          if ! git checkout poggit-staging; then
            git checkout --orphan poggit-staging
            echo <<EOF >.poggit.yml
          branches: poggit-staging
          projects:
            ${{github.repository}}:
              type: plugin
              compressBuilds: false
              fullGzip: false
          EOF
          fi
          mv .poggit.yml /tmp/.poggit.yml
          git rm -fr .
          git clean -dxff
          mv /tmp/.poggit.yml .poggit.yml
      - name: Create commit
        run: |
          cp ${{steps.pharynx.outputs.output-phar}} ChoosePlayer.phar
          cp -r ${{steps.pharynx.outputs.output-dir}}/* .
          git add -A
          git \
            -c user.name="github-actions[bot]" \
            -c user.email="41898282+github-actions[bot]@users.noreply.github.com" \
            commit -am "${{github.event.head_commit.message}} (${{github.sha}})"
      - name: Push commit
        run: git push -u origin poggit-staging
