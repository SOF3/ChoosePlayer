name: CI
on:
  - push
  - pull_request
jobs:
  build-php:
    name: Prepare PHP
    runs-on: ubuntu-latest
    strategy:
      matrix:
        php: [8.0.18]
    steps:
      - name: Build and prepare PHP cache
        uses: pmmp/setup-php-action@aa636a4fe0c1c035fd9a3f05e360eadd86e06440
        with:
          php-version: ${{ matrix.php }}
          install-path: "../bin"

  fmt:
    name: code style check
    needs: [build-php]
    runs-on: ubuntu-latest
    strategy:
      matrix:
        php:
          - "8.0.11"
    steps:
      - uses: actions/checkout@v3
      - uses: pmmp/setup-php-action@e232f72a4330a07aae8418e8aa56b64efcdda636
        with:
          php-version: ${{matrix.php}}
          install-path: "../bin"
      - name: Install Composer
        run: curl -sS https://getcomposer.org/installer | php
      - run: composer install
      - run: php vendor/bin/php-cs-fixer
  phpstan:
    name: phpstan analyze
    needs: [build-php]
    runs-on: ubuntu-latest
    strategy:
      matrix:
        php:
          - "8.0.11"
    steps:
      - uses: actions/checkout@v3
      - uses: pmmp/setup-php-action@e232f72a4330a07aae8418e8aa56b64efcdda636
        with:
          php-version: ${{matrix.php}}
          install-path: "../bin"
      - name: Install Composer
        run: curl -sS https://getcomposer.org/installer | php
      - run: composer install
      - name: phpstan analyze
        run: php vendor/bin/phpstan
  phpunit:
    name: unit tests
    needs: [build-php]
    runs-on: ubuntu-latest
    strategy:
      matrix:
        php:
          - "8.0.11"
    steps:
      - uses: actions/checkout@v3
      - uses: pmmp/setup-php-action@e232f72a4330a07aae8418e8aa56b64efcdda636
        with:
          php-version: ${{matrix.php}}
          install-path: "../bin"
      - name: Install Composer
        run: curl -sS https://getcomposer.org/installer | php
      - run: composer install
      - name: run tests
        run: php vendor/bin/phpunit
  pharynx:
    name: build phar
    permissions:
      contents: write
    needs: [build-php]
    runs-on: ubuntu-latest
    if: github.event_name == "push" && github.ref == "refs/heads/master"
    strategy:
      matrix:
        php:
          - "8.0.11"
    steps:
      - uses: actions/checkout@v3
      - uses: pmmp/setup-php-action@e232f72a4330a07aae8418e8aa56b64efcdda636
        with:
          php-version: ${{matrix.php}}
          install-path: "../bin"
      - name: Install pharynx
        run: wget -O pharynx.phar https://github.com/SOF3/pharynx/releases/download/0.2.1/pharynx.phar
      - name: php pharynx.phar -i . -p=../output.phar
      - uses: actions/upload-artifact@v3
        with:
          name: output.phar
          path: ../output.phar

      - name: Create poggit-staging branch
        run: |
          git fetch origin
          if ! git checkout poggit-staging; then
            git checkout --orphan poggit-staging
            echo <<EOF >.poggit.yml
            branches: poggit-staging
            projects:
              ${{github.repository}}:
                type: plugin
                compressBuilds: false
                fullGzip: true
            EOF
            git add .poggit.yml
          fi
      - name: Create commit
        run: |
          test ! -f plugin.yml || rm plugin.yml
          test ! -d resources || rm -r resources
          test ! -d src || rm -r src
          php -r '(new Phar("../output.phar"))->extractTo(".");'
          git add plugin.yml
          git add src
          test ! -d resources || git add resources
          git commit -am "${github.event.head_commit.message}"
      - name: Push commit
        run: git push -u origin poggit-staging
